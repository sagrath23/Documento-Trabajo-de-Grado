#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass book
\begin_preamble
\setcounter{section}{1}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding auto
\fontencoding global
\font_roman lmodern
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family rmdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Índice
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\topmargin 3cm
\rightmargin 3cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
estado del arte
\end_layout

\begin_layout Plain Layout
.Que es gecode 
\end_layout

\begin_layout Plain Layout
-para que sirve gecode.
 
\end_layout

\begin_layout Plain Layout
.Que es cpgraph 
\end_layout

\begin_layout Plain Layout
.utilidad cpgraph.
 
\end_layout

\begin_layout Plain Layout
dominio de computacion de cpgraph- 
\end_layout

\begin_layout Plain Layout
restriccion del nucleo de cpgraph.
 
\end_layout

\begin_layout Plain Layout
restricciones globales de cpgraph.
 e
\end_layout

\begin_layout Plain Layout
xpresividad de cpgraph
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Cronograma de actividades
\end_layout

\begin_layout Standard
El objetivo de este capítulo es brindar el conocimiento necesario para entender
 el área en general donde se ubica este proyecto que es Programación por
 Restricciones y conceptos basicos de teoria musical y armonia musical.
 
\end_layout

\begin_layout Section
Programación por Restricciones
\end_layout

\begin_layout Subsection
Problemas de Satisfacción de Restricciones (CSPs)
\end_layout

\begin_layout Standard
En Programación por Restricciones el modelamiento de problema se hace convirtien
do la descripción del problema en un CSP (Problema De Satisfacción de Restriccio
nes o  Constraint Satisfaction Problem,  en inglés),  es decir identificando:
\end_layout

\begin_layout Itemize
Las variables del problema.
\end_layout

\begin_layout Itemize
El dominio de cada una de las variables del problema.
\end_layout

\begin_layout Itemize
Las condiciones que deben cumplir los valores solución para las variables
 que involucra el problema.
\end_layout

\begin_layout Subsection
Utilidad de Programación por Restricciones
\end_layout

\begin_layout Standard
La Programación por Restricciones (CP o Constraint Programming,  en inglés)
 trata del estudio de sistemas computacionales basados sobre restricciones.
 La idea de la programación por restricciones es resolver problemas declarando
 restricciones (condiciones o propiedades) las cuales deben ser satisfechas
 por la solución
\begin_inset CommandInset citation
LatexCommand cite
key "key-8"

\end_inset

.
\end_layout

\begin_layout Standard
Existen una gran cantidad de aplicaciones de Programación por Restricciones
 dado la cantidad de problemas que involucran restricciones; para más informació
n
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "key-8"

\end_inset

.
\end_layout

\begin_layout Subsection
Concepto de Restricción
\end_layout

\begin_layout Standard
Una restricción es una relación lógica entre variables.
\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset

Por ejemplo, la pareja de variables X,  Y puede estar relacionada por la
 restricción X < Y, las variables X, Y por si solas no están relacionas
 pero al introducir la restricción < 
\begin_inset space ~
\end_inset

se introduce información que deben cumplir las variables; algo lógico es
 que una variable pueda tomar un conjunto determinado de valores a esto
 se le denomina el dominio de la variable
\begin_inset CommandInset citation
LatexCommand cite
key "key-8"

\end_inset

.
\end_layout

\begin_layout Subsection
Definición Formal de un CSP
\end_layout

\begin_layout Standard
De manera formal un CSP 
\begin_inset Formula $P$
\end_inset

 se define como:
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $P=<X_{s},D_{s},C_{s}>donde\,X_{s}={\left\{ X_{1}...X_{n}\right\} }$
\end_inset

 es el conjunto de variables.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset Formula $D_{s}$
\end_inset

 es el conjunto de dominios 
\begin_inset Formula $D_{s}=<D_{1},D_{2}...D_{n}>$
\end_inset

 de tal forma que 
\begin_inset Formula $X_{i\,}\,\epsilon\,D_{i}$
\end_inset

 Siendo 
\begin_inset Formula $U$
\end_inset

 el conjunto universal de todos los posibles valores.
\begin_inset space ~
\end_inset

 Cada variable 
\begin_inset Formula $X\:\epsilon\:X_{s}$
\end_inset

tiene un posible conjunto de valores 
\begin_inset Formula $D(X)$
\end_inset

 
\begin_inset Formula $\subseteq$
\end_inset

 
\begin_inset Formula $U$
\end_inset


\begin_inset space ~
\end_inset

que puede ser asignado a la variable y el cual es llamado el dominio de
 la variable.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $C_{s}=<C_{1},C_{2}....C_{t}>$
\end_inset

 es el conjunto de restricciones.
 Una restricción 
\begin_inset Formula $C_{j}$
\end_inset

 es una tupla 
\begin_inset Formula $(R_{s_{j}},S_{j})$
\end_inset

 donde 
\begin_inset Formula $R_{s_{j}}$
\end_inset

 es una relación sobre las variables 
\begin_inset Formula $S_{j}$
\end_inset

,  donde 
\begin_inset Formula $S_{i}=Scope(C_{i})$
\end_inset

 (el conjunto de las variables afectadas por la restricción).
 Es decir 
\begin_inset Formula $R_{i}$
\end_inset

 es un subconjunto del producto cartesiano de las variables en 
\begin_inset Formula $S_{i}$
\end_inset

.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Una solución al CSP 
\begin_inset Formula $P$
\end_inset

 es una tupla 
\begin_inset Formula $A=<a_{1},a_{2}...a_{n}>$
\end_inset

 donde 
\begin_inset Formula $a_{i}\epsilon D_{i}$
\end_inset

 y cada 
\begin_inset Formula $C_{j}$
\end_inset

 es satisfecho de tal forma que
\begin_inset Formula $<a_{1},a_{2}...a_{n}>\epsilon\,C_{s}$
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "key3,key-31,key-32"

\end_inset

.
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
falta corrección key-3
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsubsection
Propiedades Importantes de Los CSPs
\end_layout

\begin_layout Itemize

\series bold
Equivalencia:
\series default
 
\begin_inset Newline newline
\end_inset

Considere una secuencia de Variables 
\begin_inset Formula $X:=x_{1},.....,x_{n}$
\end_inset

 
\begin_inset space ~
\end_inset

con una secuencia de dominios 
\begin_inset Formula $D_{1},....,D_{n}$
\end_inset

.Tome un elemento 
\begin_inset Formula $d:=(d_{1},....,d_{n})$
\end_inset

 
\begin_inset space ~
\end_inset

de 
\begin_inset Formula $D_{1}$
\end_inset


\begin_inset Formula $\times....\times D_{n}$
\end_inset


\begin_inset space ~
\end_inset

y una subsecuencia 
\begin_inset Formula $Y=x_{i_{1}},....,x_{i_{l}}$
\end_inset


\begin_inset space ~
\end_inset

de 
\begin_inset Formula $X$
\end_inset

.
 Entonces se denota la secuencia 
\begin_inset Formula $(d_{i_{1}},....,d_{i_{l}})\,$
\end_inset

como 
\begin_inset Formula $d[Y]$
\end_inset

 y se lee como la proyección de 
\begin_inset Formula $d$
\end_inset

 sobre 
\begin_inset Formula $Y$
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "key-32"

\end_inset

.
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Con la proyección se define el primer concepto de equivalencia:
\end_layout

\begin_deeper
\begin_layout Standard
Dos CSPs nombrados respectivamente 
\begin_inset Formula $P_{1}$
\end_inset

 y 
\begin_inset Formula $P_{2}$
\end_inset


\begin_inset space ~
\end_inset

se consideran CSPs equivalentes si:
\end_layout

\begin_layout Standard
\begin_inset Formula $\{d[X]\,|\,d\;es\;una\;solucion\;a\;P_{1}\}=\{d[X]\,|\,d\;es\;una\;solucion\;a\;P_{2}\}$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

El segundo concepto de equivalencia:
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Considere los CSPs 
\begin_inset Formula $P_{0}..P_{m}$
\end_inset

 donde 
\begin_inset Formula $m\geq1$
\end_inset

 y una secuencia 
\begin_inset Formula $X$
\end_inset

 de sus variables comunes.
 Se dice que la unión de 
\begin_inset Formula $P_{1}..P_{m}$
\end_inset

 es equivalente a 
\begin_inset Formula $P_{0}$
\end_inset

 con respecto a 
\begin_inset Formula $X$
\end_inset

 Si:
\end_layout

\begin_layout Standard
\begin_inset Formula $\{d[X]\;|\;d\;es\;una\;solucion\;a\;P_{0}\}=\overset{m}{\bigcup_{i=1}}\{d[X]\;|\;d\;es\;una\;solucion\;a\;P_{i}\}.$
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Es decir un CSPs puede verse como la unión de muchos otros CSPs.
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Consistencia:
\series default
 
\begin_inset Newline newline
\end_inset

Un CSP es consistente o no fallido,  si 
\begin_inset Formula $Soluciones(X,D,C)\neq\emptyset$
\end_inset

,  es decir si existe al menos una solución
\begin_inset CommandInset citation
LatexCommand cite
key "key-32"

\end_inset

.
\end_layout

\begin_layout Itemize
Existen varias representaciones en CSP de un mismo problema
\begin_inset CommandInset citation
LatexCommand cite
key "key-32"

\end_inset

.
\end_layout

\begin_layout Itemize
Un CSP está resuelto,  si todas las restricciones han sido resultas y para
 cada 
\begin_inset Formula $X_{i}$
\end_inset


\begin_inset space ~
\end_inset

que pertenece a 
\begin_inset Formula $X$
\end_inset

,  
\begin_inset Formula $Dominio(X_{i})\neq\phi$
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "key-32"

\end_inset

.
\end_layout

\begin_layout Subsection
Resolviendo CSPs
\end_layout

\begin_layout Standard
Una vez el CSP está planteado se procede a encontrar su solución.
\begin_inset space ~
\end_inset

Para ello primeramente tiene que definirse si el CSP es consistente (si
 existe una solución).
 En caso de que el CSP cumpla con la propiedad de Consistencia el paso a
 seguir sería identificar a qué tipo de solución se pretende llegar:
\end_layout

\begin_layout Itemize
Encontrar una solución.
\end_layout

\begin_layout Itemize
Encontrar todas las soluciones.
\end_layout

\begin_layout Itemize
Encontrar la solución óptima.
\end_layout

\begin_layout Standard
Una vez definida la solución que se espera,  se escoge el método para llegar
 a la solución.
\begin_inset space ~
\end_inset

Existen métodos específicos y generales.
 Los específicos son llamados Solucionadores de Restricciones (Constraint
 Solvers,  en inglés)y se aplican en problemas con dominios específicos
 y características específicas.
 Por ejemplo existen Solucionadores de Restricciones para resolver problemas
 que involucran ecuaciones lineales,  problemas de variables del dominio
 de los reales,  grafos,  entre otros
\begin_inset CommandInset citation
LatexCommand cite
key "key-31,key-32"

\end_inset

.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Una vez planteados el CSP y el tipo de solución a la que se pretende llegar,
  empieza la resolución del CSP.
\end_layout

\begin_layout Enumerate
En primera instancia un CSP inicial generará otros CSPs equivalentes al
 CSP inicial,  al ser transformado por los propagadores y reglas de transformaci
ón.
 Los propagadores en la primera etapa podarán los dominios de las variables
 según las reglas que le hayan sido especificadas.
\end_layout

\begin_layout Enumerate
Una vez los propagadores han podado los dominios de las variables del CSP,
 si no existe aun una solución,  el motor de búsqueda y la estrategia de
 distribución se encargaran de explorar los dominios de varias de las variables.
 La estrategia de distribución (Branching,  en inglés) define en cual orden
 se exploran las variables ( e.g la variable con más restricciones,  la variable
 con el dominio más pequeño) y en qué orden serán asignados los valores
 del dominio a esa variable ( e.g el valor más grande del dominio,  el valor
 más pequeño del dominio).Esta exploración del árbol y de los dominios de
 las variables genera nuevos CSPs equivalentes.
\end_layout

\begin_layout Enumerate
Los propagadores podan los dominios de los nuevos CSPs equivalentes.
\end_layout

\begin_layout Enumerate
Se itera entre el numeral 2 y numeral 3 explorando el árbol,  los dominios
 de las variables y propagando.
 Hasta que se encuentre una solución o el dominio de una de las variables
 del CSP sea vacío,  en cuyo caso no se ha encontrado una solución.
\end_layout

\begin_layout Subsection
Propagadores (Filtering algorithms,  en inglés)
\end_layout

\begin_layout Standard
Es un algoritmo que durante la búsqueda de las soluciones a un CSP,  se
 encarga de reducir los dominios de las variables,  sin descartar soluciones
\begin_inset CommandInset citation
LatexCommand cite
key "key-31"

\end_inset

.
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Un propagador siempre debe reducir el dominio ,  por tanto debe cumplir
 con las siguientes propiedades:
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Sean D
\begin_inset Formula $_{1}$
\end_inset


\begin_inset space ~
\end_inset

y D
\begin_inset Formula $_{2}$
\end_inset

 almacenes (un almacén D define un dominio D(X) para cada variable X del
 CSP ) y 
\begin_inset Formula $f$
\end_inset

 un propagador asociado a la restricción 
\begin_inset Formula $C$
\end_inset

 .
 
\begin_inset Formula $f$
\end_inset

 debe satisfacer las siguientes propiedades:
\end_layout

\begin_layout Enumerate

\series bold
Contractante: 
\series default

\begin_inset Formula $f(D_{1})\subseteq D_{1}$
\end_inset


\end_layout

\begin_layout Enumerate

\series bold
Monótono:
\series default
 
\begin_inset Formula $D_{1}\subseteq D_{2}\,\Longrightarrow\,f(D_{1})\,\subseteq f(D_{2})$
\end_inset


\end_layout

\begin_layout Enumerate

\series bold
Correcto:
\series default
 
\begin_inset Formula $D_{1}\cap\,C\subseteq f(D_{1})$
\end_inset


\end_layout

\begin_layout Standard
Un propagador convierte un CSP 
\begin_inset Formula $P$
\end_inset

 en un 
\begin_inset Formula $P'$
\end_inset

 de tal forma que sean CSPs equivalentes.
\begin_inset Note Note
status collapsed

\begin_layout Subsection
Modelo de Ejecución
\end_layout

\begin_layout Plain Layout
Durante la búsqueda de las soluciones de un CSP se tiene que el espacio
 de búsqueda son todos los posibles y potenciales valores que pueden tomar
 las variables que involucra el CSP,  sin embargo explorar cada una de las
 posibles combinaciones cuando se tiene un número considerable de variables
 es costoso en complejidad.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Plain Layout
El algoritmo 1 muestra el flujo desde un alto nivel para la solución de
 un CSP.
\end_layout

\begin_layout Plain Layout
\begin_inset Float algorithm
wide false
sideways false
status collapsed

\begin_layout Plain Layout

\series bold
Solve
\series default
:
\end_layout

\begin_layout Plain Layout
Var continue: Boolean;
\end_layout

\begin_layout Plain Layout
continue 
\begin_inset Formula $\leftarrow$
\end_inset

true;
\end_layout

\begin_layout Plain Layout

\series bold
while
\series default
 continue And Not Happy 
\series bold
do
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Preprocess;
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Constraint Propagation;
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\series bold
If
\series default
 Not Happy
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\series bold
then
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\series bold
if
\series default
 Atomic
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\series bold
then
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

continue 
\begin_inset Formula $\leftarrow false$
\end_inset


\series bold
;
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\series bold
else
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Split;
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Proceed By Cases;
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\series bold
end
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\series bold
end
\end_layout

\begin_layout Plain Layout

\series bold
end
\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Procedimiento Solve(Representa el Ciclo Básico de Programación por Restricciones
) 
\begin_inset CommandInset citation
LatexCommand cite
key "key2"

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
El preprocesamiento hace referencia a que las restricciones y las variables
 son transformadas a la forma sintáctica en que los propagadores y los algoritmo
s pueden procesarlas.
\end_layout

\begin_layout Itemize
"
\shape italic
Happy
\shape default
" significa que se ha llegado al objetivo esperado,  en este caso se recuerda
 que el objetivo puede ser: encontrar todas las soluciones posibles,  solo
 una solución o las soluciones óptimas entre otras.
\end_layout

\begin_layout Itemize
Atómico hace referencia a que los dominios de todas las variables son unitarios.
\end_layout

\begin_layout Itemize
La propagación de restricción hace referencia a generar CSPs equivalentes
 usando propagadores que recorten de manera significativa los dominios de
 las variables.
\end_layout

\begin_layout Itemize
La División (Split, en inglés) hace referencia a partir el CSP 
\begin_inset Formula $P$
\end_inset

 en subproblemas 
\begin_inset Formula $P_{1},P_{2}...P_{n}$
\end_inset

 de tal forma de que 
\begin_inset Formula $\bigcup_{1}^{n}P_{i}=P$
\end_inset

, estos subproblemas son nuevos CSPs que partieron el dominio del CSP 
\begin_inset Formula $P$
\end_inset

 inicial.
 
\begin_inset space ~
\end_inset

Es aquí cuando se explora el espacio de búsqueda y los potenciales valores
 que pueden tomar las variables.
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

La División es de vital importancia en la solución del CSP,  pues se pueden
 definir diferentes maneras de explorar el dominio de las variables.La estrategia
 adoptada para la partición del dominio o la manera en la que se explora
 el árbol de búsqueda es la Heurística de Búsqueda.
 
\begin_inset space ~
\end_inset

Es elección del usuario escoger la Heurística que mejor se ajuste al problema
 que desea atacar.
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

La División se representa mediante reglas de la forma:
\end_layout

\begin_deeper
\begin_layout Plain Layout

\series bold
\begin_inset Formula 
\[
\dfrac{Guard}{Rule}
\]

\end_inset


\end_layout

\begin_layout Plain Layout
La Guarda (Guard,  en inglés) representa una expresión booleana que debe
 cumplirse para que la regla sea aplicada.Algunas reglas usadas durante el
 split son:
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Etiquetamiento (labeling,  en inglés)
\series bold

\begin_inset Formula 
\[
\dfrac{X\epsilon\left\{ a_{1},...a_{k}\right\} }{X\epsilon\left\{ a_{1}\right\} \mid...\mid X\epsilon\left\{ a_{k}\right\} }
\]

\end_inset


\series default

\begin_inset Newline newline
\end_inset

Bisección (bisection,  en inglés)
\series bold

\begin_inset Formula 
\[
\dfrac{X\epsilon\left[a,b\right]}{X\epsilon\left[a,\frac{a+b}{2}\right]\mid X\epsilon\left[\frac{a+b}{2},b\right]}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
La notación 
\begin_inset Formula $\mid$
\end_inset

 indica que varios CSPs son generados.
\begin_inset Newline newline
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Teoría Musical 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
desde aqui tengo que empezar a cambiar.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
La teoría musical es un campo de estudio que tiene por objeto la investigación
 de los diversos elementos de la música, entre ellos el desarrollo y la
 metodología para analizar, escuchar, comprender y componer música.
 Mientras que la musicología puede incluir cualquier declaración, creencia
 o concepción de lo qué es la música, la teoría musical está limitada a
 las discusiones concernientes a los eventos sincrónicos (o diacrónicos)
 de una composición específica (o varias composiciones), y a los capítulos
 músico-teoréticos abstractos (por ejemplo teoría de conjuntos, teoría de
 grupos, teoría de tensión tonal, etc.).
\end_layout

\begin_layout Subsection

\series bold
Armonia 
\end_layout

\begin_layout Standard
La armonía es una arte-ciencia, basada en la física que busca una clasificación
 de acordes e intervalos, buscando formas de combinarlos para producir distintas
 sensaciones: reposo, tranquilidad, pena, nostalgia ó tensión, desesperación,
 ira, excitación.
 Hay una armonía para cada grupo de sentimientos; armonía consonante y disonante
, respectivamente.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
La armonía se refiere al aspecto «vertical» (simultáneo en el tiempo) de
 la música, que se distingue del aspecto horizontal (la melodía, que es
 la sucesión de notas en el tiempo).
 La idea de vertical y horizontal es una metáfora explicativa, relacionada
 a la disposición de las notas musicales en una partitura: verticalmente
 se escriben las notas que se interpretan a la vez, y horizontalmente las
 que se interpretan en forma sucesiva.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
En la escolástica musical, el contrapunto es una disciplina complementaria
 a la armonía (y que se confunde con ella), pero que se centra más en la
 elaboración de melodías que sean combinables simultáneamente que en los
 acordes resultantes de tal combinación.
 Es decir: se centra más en la percepción de las partes que en la del todo.
 Como disciplina creativa (y no como disciplina académica), el contrapunto
 tuvo su auge durante el Barroco, particularmente con la figura de Johann
 Sebastian Bach.
\begin_inset CommandInset citation
LatexCommand cite
key "key-6"

\end_inset


\end_layout

\begin_layout Subsection
Contrapunto
\end_layout

\begin_layout Standard
El contrapunto se refiere a una parte de la teoría musical que estudia la
 técnica que se utiliza para componer música polifónica mediante el enlace
 de dos o más melodías (también voces o líneas) independientes que se escuchan
 simultáneamente.
 El término contrapunto deriva de punctum contra punctum, «nota contra nota»
 o «melodía contra melodía» y por sí mismo describe el pasaje musical consistent
e en dos o más líneas melódicas que suenan simultáneamente.
\begin_inset CommandInset citation
LatexCommand cite
key "key-7"

\end_inset


\end_layout

\begin_layout Subsection

\series bold
Acorde
\series default
 
\end_layout

\begin_layout Standard
Se llama acorde a un grupo de sonidos, colocados en orden de terceras superpuest
as, que se producen simultaneamente.
\begin_inset CommandInset citation
LatexCommand cite
key "key-5"

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Formalmente, un acorde consta de entre tres y siete notas de las doce que
 componen una octava; las notas pueden pertenecer a la misma o a diferentes
 octavas.
 La distancia entre dos notas musicales se conoce como intervalo musical;
 los intervalos musicales, combinados, determinan los diferentes tipos de
 acordes.
 Cada tipo de acorde puede presentar como tono fundamental cualquiera de
 las doce notas musicales (
\emph on
do, do#, re, re#, mi, fa, fa#, sol, sol#, la, la#, si
\emph default
).
 Este tono fundamental (también conocido como nota fundamental, nota tónica,
 fundamental o tónica) determina la tonalidad del acorde y constituye la
 referencia para los intervalos del mismo.
 En la fig.
 2.1 se muestra un ejemplo de un acorde mayor en piano.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename graphics/PianoChord_C.svg
	scale 80
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Do mayor en estado fundamental.
 El intervalo entre las dos primeras notas desde la izquierda (do y mi,
 respectivamente) define su carácter de acorde mayor.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Progresión Armónica
\end_layout

\begin_layout Standard
En música, una progresión armónica es una sucesión de acordes, explícitos
 o implícitos.
 Las más comunes son las que se basan en el círculo de quintas (ejemplo:
 I got Rhythm, de George Gershwin), pero existe igualmente una cantidad
 comparable de piezas que no.
 Por extensión se añade el adjetivo progresivo a los subgéneros musicales
 que utilizan este tipo de composición.
 En la fig.
 2.2 se muestra un ejemplo de una progresión armónica.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename graphics/II_V_I_for_wikipedia.png
	scale 80
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Progresión armónica de 6 acordes.
 Nótese que, en las notas del pentagrama, al acorde de Sol novena (
\emph on
G9
\emph default
) le falta la tercera y que al acorde de 
\emph on
Sol
\emph default
 novena con cuarta suspendida (
\emph on
G9sus
\emph default
) le falta la quinta.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\series bold
Intervalo
\end_layout

\begin_layout Standard
Es la distancia entre dos notas.
 Un intervalo se mide a partir de un tono inicial, contando semitonos hasta
 una nota final; por ejemplo: En una escala de 
\emph on
Do
\emph default
 Mayor (
\emph on
Do-Re-Mi-Fa-Sol-La-Si
\emph default
), entre
\emph on
 Do
\emph default
 y 
\emph on
Mi
\emph default
 hay un intervalo de tercera ya que se recorren tres notas para llegar a
 
\emph on
Mi
\emph default
 (
\emph on
Do-Re-Mi
\emph default
).
 El intervalo se mide en semitonos (fig.
 2.4) y se expresa en grados (fig.
 2.3).
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
buscar tabla de intervalos en wikipedia.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename graphics/intervalos.png
	scale 50
	rotateOrigin center

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Diagrama de los intervalos musicales de la escala cromática en la primera
 octava a partir de la tónica.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Este tipo de clasificación para los intervalos musicales ayudan a ordenarlos
 según su sonoridad.
 Así, se pueden tener intervalos mayores, menores, justos, aumentados, disminuid
os, super-aumentados y sub-disminuidos.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename graphics/clasificación-intervalos-musicales.png
	scale 50
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Intervalos musicales, mostrados sobre el pentagrama con la nota Do como
 tono fundamental.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Se puede tomar la tónica (primera nota) de una escala mayor e ir recorriendo
 toda la escala, identificando los intervalo correspondientes entre la tónica
 y cada una de las notas de la escala, comprobando que solo contiene intervalos
 mayores y justos.
\end_layout

\begin_layout Subsection
Canon
\end_layout

\begin_layout Standard
El canon es una forma de composición musical de carácter polifónico basada
 en la 
\emph on
imitación estricta
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
En música, la imitación es la repetición posterior de un patrón musical
 en una forma diferente, pero manteniendo su carácter original.
\end_layout

\end_inset


\emph default
 entre dos o más voces separadas por un intervalo temporal.
 La primera voz interpreta una melodía y es seguida, a distancia de ciertos
 compases, por sucesivas voces que la repiten, en algunos casos transformadas
 en su tonalidad o en otros aspectos.
 A la primera voz se le llama propuesta o «antecedente», y a las voces que
 le siguen respuesta o «consecuente».
 El canon aportó un gran beneficio al estudio del contrapunto, y, en consecuenci
a, al desarrollo de las distintas formas musicales.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename graphics/pachelbel-canon-colors.png
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Canon en Re de Pachelbel
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Section
Dominio de Computación de CP(Graph)
\end_layout

\begin_layout Subsection
Introducción 
\begin_inset Note Note
status open

\begin_layout Plain Layout
11 junio, cambio sugerido por orlando: quite la referencia y la puse al
 final del parrafo
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
Esta sección enumeran
\begin_inset Note Note
status open

\begin_layout Plain Layout
me parece ambiguo es decir se pone un numero
\end_layout

\end_inset

 las restricciones disponibles en CP(Graph),  la representaciones de variables
 de grafos que se implementaron y otras generalidades de CP(Graph).
\begin_inset Newline newline
\end_inset

Una variable del dominio de grafos toma valores de Grafos,  es decir el
 dominio de la variable es un conjunto de grafos.
 Si se intentara enumerar todos los posibles grafos que existen en el dominio
 de una variable de grafos el gasto en memoria sería excesivo.Para evitar
 lo anterior se usan abstracciones
\begin_inset CommandInset citation
LatexCommand cite
key "introtocpgraph"

\end_inset

.
\end_layout

\begin_layout Subsection
Intervalo de Grafo
\end_layout

\begin_layout Plain Layout
Un problema al plantearse el desarrollo de un Framework que permita definir
 restricciones sobre los grafos,  es la representación que van a tener los
 grafos.
 Existen diferentes soluciones para la pregunta 
\begin_inset Quotes eld
\end_inset


\shape italic
¿como representar una variable del dominio de los grafos?
\shape default

\begin_inset Quotes erd
\end_inset

.
 
\begin_inset space ~
\end_inset

Para la definición de las restricciones a nivel teórico,  el autor de CP(Graph)
 planteó una sola representación genérica,  mientras que a nivel de implementaci
ón existen dos representaciones diferentes.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout
Sea 
\begin_inset Formula $g$
\end_inset

 un grafo,  entonces 
\begin_inset Formula $g=$
\end_inset

 
\begin_inset Formula $\left(sn,sa\right)\,$
\end_inset

 donde 
\begin_inset Formula $sn$
\end_inset

 es el conjunto de nodos que compone el grafo,  
\begin_inset Formula $sa$
\end_inset

 es el conjunto de aristas que posee el grafo y por tanto se tiene que:
 
\begin_inset Formula $sa$
\end_inset

 
\begin_inset Formula $\subseteq sn\,\times\,sn$
\end_inset

.
\end_layout

\begin_layout Plain Layout
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Plain Layout
Dada la definición anterior la representación de variables del dominio de
 grafos esta dada por un intervalo de grafos,  es decir:
\end_layout

\begin_layout Itemize
Un Least Upper Bound(
\shape italic
LUB
\shape default
) ( Cota Superior más Pequeña): Es una cota superior que define el conjunto
 superior de nodos y el conjunto superior de aristas,  es decir aquellos
 nodos y aristas que 
\series bold
\shape italic
podrían
\series default
\shape default
 ser incluidos en el grafo.
\end_layout

\begin_layout Itemize
Un Greatest Lower Bound (
\shape italic
GLB
\shape default
) (Cota Inferior más Grande): Es una cota inferior que define el conjunto
 inferior de nodos y el conjunto inferior de aristas,  es decir aquellos
 nodos y aristas que se 
\series bold
\shape italic
saben tienen
\series default
\shape default
 que ser incluidos en el grafo.
\end_layout

\begin_layout Plain Layout
Por tanto se tiene que si 
\begin_inset Formula $G_{1}\subseteq G_{2}\;,[G_{1},G_{2}]$
\end_inset

 es un Intervalo de Grafo.
 
\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename graphics/graphInterval.svg
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Intervalo de Grafo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
En la Figura 2.5 el GLB (circulo verde) define los nodos y aristas obligatorios.
 El LUB (circulo rojo) define las aristas y nodos que podrían ser incluidos
 en el grafo.
 El círculo gris determina el conjunto de grafos que son abstraídos por
 el GLB y el LUB pero que no son enumerados.
\end_layout

\begin_layout Plain Layout
Si 
\begin_inset Formula $G$
\end_inset

 es una variable del dominio de grafos,  se denota 
\begin_inset Formula $dom(G)=[gL,gU]$
\end_inset

 con 
\begin_inset Formula $gL=glb(G)$
\end_inset

 y 
\begin_inset Formula $gU=lub(G)$
\end_inset

.
 Si S es una variable de conjuntos finita,  se denota 
\begin_inset Formula $dom(S)=[sL,sU]$
\end_inset

,  con 
\begin_inset Formula $sL=glb(S)$
\end_inset

 y 
\begin_inset Formula $sU=lub(S)$
\end_inset

.
 
\end_layout

\begin_layout Subsection
Variables  de Grafos en CP(Graph)
\begin_inset CommandInset label
LatexCommand label
name "sub:Variables-Disponibles-En-CpGraph"

\end_inset


\end_layout

\begin_layout Plain Layout
Para el modelamiento de problemas de grafos, CP(Graph) ofrece dos alternativas
 distintas para la representación de los grafos del problema.
 El usar una u otra tiene impacto en la memoria y en el tiempo que toma
 para la solución del problema.
\end_layout

\begin_layout Plain Layout
Las dos alternativas son: OutAdjSetsGraphView y NodeArcSetsGraphView.
 En la figura a continuación se muestra la diferencia de modelamiento con
 un ejemplo sencillo.
 Para más información revisar el capítulo 6.5.2 de 
\begin_inset CommandInset citation
LatexCommand cite
key "introtocpgraph"

\end_inset

.
\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename graphics/viewConjuntos.svg
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Representación de Grafos en CP(Graph)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Variables en CP(Graph)
\begin_inset Note Note
status open

\begin_layout Plain Layout
11 junio, cambio sugerido por orlando: quite la referencia de este titulo
 y solo deje la referencia de donde se saco la tabla
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
CP(Graph) usa distintos tipos de variables,  entre estos están variables
 de nodo,  variables de arista,  variables de conjuntos de aristas y variables
 de conjuntos de nodos,  además se tiene para problemas relacionados con
 pesos,  funciones que asignan a una arista un peso.
\end_layout

\begin_layout Plain Layout
La siguiente tabla extraída de 
\begin_inset CommandInset citation
LatexCommand cite
key "key1"

\end_inset

 resume los tipos de variables de CP(Graph) y sus características más importante
s:
\end_layout

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="5">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tipo de variable
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Representación
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Restricción
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Constantes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Variable
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Integer
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0, 1, 2...
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $i_{0},i_{1},...$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $I_{0},I_{1},...$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Node
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0, 1, 2, ....
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $n_{0},n_{1},...$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $N_{0},N_{1},...$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Arc
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(0, 1), (2, 4), ...
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $a_{0},a_{1},...$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $A_{0},A_{1},...$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left\{ 0,1,2\right\} ,\left\{ 2,4\right\} $
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $s_{0},s_{1},....$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $S_{0},S_{1},...$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set of nodes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left\{ 2,3,4\right\} ,\left\{ 6,7\right\} $
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $sn_{0,}sn_{1},...$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $SN_{0},SN_{1}$
\end_inset

, ...
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set of arcs
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left\{ \left(0,3\right),\left(1,2\right)\right\} $
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $sa_{0,}sa_{1},...$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $SA_{0},SA_{1}$
\end_inset

, ..
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Graph
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left(SN,SA\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SA
\begin_inset Formula $\subseteq SNxSN$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $g{}_{0,}g{}_{1},...$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $G{}_{0,}G{}_{1},...$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Weight functions
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $N\cup A\rightarrow\mathbb{Z}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $w{}_{0,}w{}_{1},...$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $W{}_{0,}W{}_{1},...$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Restricciones del Núcleo de CP(Graph)
\end_layout

\begin_layout Plain Layout
El conjunto de restricciones de grafos del núcleo de CP(Graph) permiten
 :
\end_layout

\begin_layout Itemize
Expresar CSPs de grafos y nuevas restricciones como una combinación de estas
 junto con restricciones sobre variables enteras y de conjuntos.
\end_layout

\begin_layout Itemize
Enlazar variables de grafos con nodos,  aristas y conjuntos de estas.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout
El siguiente es el listado de las mismas:
\end_layout

\begin_layout Itemize

\emph on
Nodos
\emph default
(G, SN): esta restricción se cumple si los valores de la variable SN( un
 conjunto de nodos) es igual al conjunto de nodos de la variable de grafo
 G.
 
\end_layout

\begin_layout Itemize

\emph on
Arcs
\emph default
(G, SA): esta restricción se cumple si el valor de la variable SA(un conjunto
 de arcos o aristas) es igual al conjunto de aristas de la variable de grafos
 G.
\end_layout

\begin_layout Itemize

\emph on
ArcNode
\emph default
(A, N1, N2) esta restricción se cumple si el valor de la variable de arista
 A es igual a el arco (N1, N2) donde N1 y N2 son variables nodo.
 
\end_layout

\begin_layout Itemize

\emph on
Adjacency(G)
\emph default
: esta restricción se cumple si el conjunto de aristas del grafo es igual
 o un subconjunto de todas las aristas posibles que puede contener el grafo,
  es decir si Arcs(G) 
\begin_inset Formula $\subseteq$
\end_inset

 Nodes(G) × Nodes(G).
\end_layout

\begin_layout Plain Layout
Todos los grafos en un CSP en CP(Graph) son Subgrafos del grafo universo
 del CSP.
\begin_inset space ~
\end_inset

Por lo tanto el mapeo entre valores de variables nodo y variables arco codificad
o en la restricción ArcNode es independiente de las variables de grafos.
 Este necesita ser definido una vez para el grafo universo en el CSP.
\end_layout

\begin_layout Subsection
Restricciones Globales de CP(Graph)
\end_layout

\begin_layout Plain Layout
Las restricciones globales de CP(Graph) se crean a partir de las restricciones
 del núcleo de CP(Graph);  estas son:
\end_layout

\begin_layout Enumerate
Restricciones binarias:
\end_layout

\begin_deeper
\begin_layout Enumerate

\emph on
Subgraph
\emph default
(G1, G2): esta restricción se cumple si G1 es un Subgrafo de G2.
\end_layout

\begin_layout Enumerate

\emph on
Complement
\emph default
(G1, G2): esta restricción se cumple si G1 y G2 tienen el mismo conjunto
 de nodos y cada arista del grafo completo construido sobre aquellos nodos
 pertenece únicamente a uno de los dos grafos.
\begin_inset space ~
\end_inset

Si una arista está en G1 esta no puede estar en G2;  de igual forma una
 arista en G2 no puede estar en G1.
\end_layout

\begin_layout Enumerate

\emph on
InduceSubgraph
\emph default
(G1, G2): esta restricción se cumple si G1 es un grafo inducido de G2, 
 es decir,  si todas las aristas de G2 inciden en vértices de G1 .
\end_layout

\end_deeper
\begin_layout Enumerate
Restricciones de Conexión:
\end_layout

\begin_deeper
\begin_layout Enumerate

\emph on
Connected
\emph default
(G): esta restricción se cumple si G es un grafo no dirigido conectado,
  es decir,  entre cada par de nodos hay un camino.
\end_layout

\end_deeper
\begin_layout Enumerate
Restricciones para soportar grafos no dirigidos:
\end_layout

\begin_deeper
\begin_layout Enumerate

\emph on
Symmetric
\emph default
(G): esta restricción se cumple si la relación de adyacencia es simétrica,
  es decir,  que se puede verificar que si la arista (x, y) está en G, 
 entonces la arista (y, x) también esta en G.
\end_layout

\begin_layout Enumerate

\emph on
Undirected
\emph default
(G,  Gu): esta restricción se cumple si Gu es el grafo no dirigido(simétrico)
 obtenido de ignorar la dirección de las aristas de G.
\end_layout

\end_deeper
\begin_layout Enumerate
Restricciones de no ciclos:
\end_layout

\begin_deeper
\begin_layout Enumerate

\emph on
DAG
\emph default
(G): esta restricción se cumple si G es un grafo dirigido acíclico .Esta
 restricción prohíbe cualquier circuito en G.
 
\end_layout

\begin_layout Enumerate

\emph on
Bipartite
\emph default
(G): esta restricción se cumple,  si un grafo es bipartito,  es decir, 
 si y solo si su conjunto de nodos puede ser particionado en dos conjuntos
 N1 y N2 tales que cada arista tiene su punto final en ambos conjunto: E
 
\begin_inset Formula $\subseteq$
\end_inset

(N1 × N2) 
\begin_inset Formula $\cup$
\end_inset

 (N2 × N1).
 
\end_layout

\begin_layout Enumerate

\emph on
Tree
\emph default
(T): esta restricción se cumple si T es un árbol no dirigido,  por ejemplo
 un grafo conectado acíclico no dirigido.
\end_layout

\end_deeper
\begin_layout Enumerate
Restricciones de peso:
\end_layout

\begin_deeper
\begin_layout Enumerate

\emph on
Weight
\emph default
(G,  W,  I): esta restricción se cumple si I es el peso total asociado a
 la variable de grafo G de acuerdo a la función de peso W.
 
\end_layout

\end_deeper
\begin_layout Enumerate
Restricciones de camino:
\end_layout

\begin_deeper
\begin_layout Enumerate

\emph on
Path
\emph default
(G, N1, N2): esta restricción se cumple,  si G es un camino simple(es decir
 un camino sin repetición de vértices),  de N1 a N2.
\end_layout

\begin_layout Enumerate

\emph on
Path
\emph default
(G,  N1,  N2,  W,  I): esta restricción se cumple si G es un camino simple
 de N1 a N2 cuyo peso total no es más grande que I.
\end_layout

\begin_layout Enumerate

\emph on
Undirected
\emph default
 
\emph on
Path
\emph default
(G, n1, n2): esta restricción se cumple si G es un camino simple no dirigido
 desde n1 a n2.
\end_layout

\begin_layout Enumerate

\emph on
QuasiPath
\emph default
(G, n1, n2): esta restricción se cumple si cada nodo de G excepto n1,  n2
 tienen grado 2.
\end_layout

\end_deeper
\begin_layout Enumerate
Restricción de Clausura Transitiva(Transitive Closure,  en inglés):
\end_layout

\begin_deeper
\begin_layout Enumerate
TC
\begin_inset Formula $\left(G,G^{+}\right)=$
\end_inset

esta restricción se cumple si G
\begin_inset Formula $^{+}$
\end_inset

 es la clausura transitiva de G.
\end_layout

\end_deeper
\begin_layout Subsection
Expresividad de CP(Graph)
\end_layout

\begin_layout Plain Layout
La investigación de un dominio de grafos en Programación por Restricciones,
  es decir,  el desarrollo de CP(Graph),  fue iniciada por un problema en
 análisis de redes bioquímicas,  en este capítulo se pretende informar sobre
 el problema y mostrar como se soluciona en CP(Graph);  adicionalmente se
 explica otro problema de grafos que puede ser resuelto utilizando las restricci
ones de CP(Graph).
\end_layout

\begin_layout Subsubsection
Aplicación en Recuperación de Secuencias de Reacciones
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

(Pathways,  en inglés) Metabólicas
\end_layout

\begin_layout Plain Layout
El metabolismo es un conjunto de reacciones químicas que ocurren en los
 organismos vivos con el fin de mantener la vida.
\begin_inset space ~
\end_inset

Las reacciones químicas del metabolismo son organizadas en secuencias de
 reacciones
\emph on
 
\emph default
metabólicas en las cuales un químico es convertido en otro,  estas Redes
 Metabólicas están compuestas de cientos de nodos los cuales son de dos
 tipos: compuestos y reacciones.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\series bold
Redes Metabólicas
\series default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Las Redes Metabólicas están compuestas de entidades bioquímicas (compuestos)
 que participan en reacciones.
\begin_inset space ~
\end_inset

Tales entidades bioquímicas dependiendo de su papel pueden ser vistas como
 sustratos o productos
\begin_inset CommandInset citation
LatexCommand cite
key "key1"

\end_inset

.
\end_layout

\begin_layout Plain Layout
\begin_inset Newpage newpage
\end_inset


\begin_inset space ~
\end_inset

En la figura 2.7,  se tiene una pequeña red metabólica en donde los compuestos
 están dentro de los círculos y las reacciones dentro de los rectángulos,
  Pyruvate (compuesto) es un sustrato ya que entra a la reacción 4.2.1.52 y
 dihydrodipicolinic acid(compuesto) es un producto ya que es producido por
 la reacción.
\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename graphics/metabolicaRed.jpg
	scale 55

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Pequeña Red Metabólica 
\begin_inset CommandInset citation
LatexCommand cite
key "key-14"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
Las redes metabólicas pueden ser modeladas como un grafo dirigido bipartito
 cuyos nodos son las entidades bioquímicas y reacciones y cuyas aristas
 enlazan entidades y reacciones.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout

\series bold
Secuencia De Reacciones
\begin_inset CommandInset citation
LatexCommand cite
key "key1"

\end_inset


\end_layout

\begin_layout Plain Layout
Una secuencia de reacciones (pathway,  en inglés) son subconjuntos específicos
 de una red metabólica los cuales son identificados como procesos funcionales
 de la célula;éstas pueden ser usadas para estudiar redes metabólicas.
\begin_inset space ~
\end_inset

Como la mayoría de secuencias de reacciones tiene una estructura lineal,
  un tipo de análisis de red metabólica consiste en encontrar caminos simples
 en un grafo metabólico.
\end_layout

\begin_layout Plain Layout
En CP(Graph),  se usa Programación por Restricciones para resolver problemas
 de búsqueda de caminos simples restringidos.
\begin_inset space ~
\end_inset

El tipo general de análisis hecho con CP(Graph) consiste en una recuperación
 de secuencias de reacciones por búsqueda de Subgrafos restringidos.
\end_layout

\begin_layout Paragraph
Configuración Previa a la Usada en CP(Graph)
\begin_inset CommandInset citation
LatexCommand cite
key "key1"

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout
Para entender el modelo planteado por Gregoire Dooms para este problema
 es importante explicar de manera somera la configuración en la que el se
 basó, es decir,  que extendió.
\begin_inset space ~
\end_inset

La primera configuración consistía en buscar el camino simple más corto
 nodo a nodo en un grafo modelando la red bioquímica; esto puede ser hecho
 usando búsqueda primero en profundidad.
\begin_inset space ~
\end_inset

Un problema en esta aproximación es que existen moléculas altamente conectadas
 como H
\begin_inset Formula $_{2}$
\end_inset

O mostrada en la figura 2.7,  las cuales generan gran cantidad de caminos
 que no corresponden a secuencias de reacciones reales .
\begin_inset space ~
\end_inset

Una solución propuesta es remover estos nodos del grafo antes de realizar
 la búsqueda del camino simple.
\begin_inset space ~
\end_inset

Un nuevo problema es entonces que algunas secuencias de reacciones,  tales
 como glycolisis,  usan algunos de estas moléculas como intermedios.
\begin_inset space ~
\end_inset

Para reducir la posibilidad de seleccionar estos nodos mientras permiten
 seleccionarlos,  cada nodo tiene asignado un peso proporcional a su grado.Un
 grupo de metabolitos tiene un grado muy alto así que son menos probables
 de seleccionar en el camino simple más corto.
\begin_inset space ~
\end_inset

Este problema requiere un algoritmo de camino simple más corto positivo
 tal como Dijkstra.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout
La tasa de recuperación de secuencias de reacciones correctas debería ser
 incrementada: algunos caminos simples van a través de una reacción y su
 reacción inversa.
 Esta pareja de reacciones inversas modelan la reacción desde sustratos
 para producir y desde productos para sustraer.
\begin_inset space ~
\end_inset

La mayoría del tiempo,  estas reacciones son observadas en una sola dirección
 en cada especie.
\begin_inset space ~
\end_inset

 Por lo tanto caminos simples que contengan ambas reacciones deberían ser
 excluidos del conjunto resultado.
\end_layout

\begin_layout Paragraph
Configuración Usada en CP(Graph)
\begin_inset CommandInset citation
LatexCommand cite
key "key1"

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout
El modelo extiende la configuración anterior y agrega nodos obligatorios
 en el camino simple.
\end_layout

\begin_layout Plain Layout
Sea n
\begin_inset Formula $_{1},.....n_{m}$
\end_inset

los nodos obligatorios incluidas las reacciones (r
\begin_inset Formula $_{i1}$
\end_inset

, r
\begin_inset Formula $_{i2}$
\end_inset

) 1
\begin_inset Formula $\leq i\leq t$
\end_inset

 las parejas mutuamente exclusivas de reacciones,  el CSP es: 
\begin_inset Newline newline
\end_inset

Minimizar Weight
\begin_inset Formula $\left(G,w\right)$
\end_inset

sujeto a:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Formula $Subgraph\left(G,g\right)\wedge Path(G,n_{1},n_{m})$
\end_inset


\begin_inset Formula $\wedge\forall i$
\end_inset

 
\begin_inset Formula $\in\left[1,m\right]:n_{i}\in Nodes(G)\wedge\forall i$
\end_inset


\begin_inset Formula $\in\left[1,t\right]:r_{i1}\notin Nodes(G)\vee$
\end_inset

r
\begin_inset Formula $_{i2}\notin Nodes(G)$
\end_inset

 
\begin_inset Newline newline
\end_inset

El problema de optimización presentado se resuelve usando una heurística
 first fail
\begin_inset Note Note
status open

\begin_layout Plain Layout
revisar traducción al español
\end_layout

\end_inset

 para búsqueda de caminos.
\begin_inset space ~
\end_inset

Esta heurística selecciona el nodo con el más bajo grado de salida y escoge
 la arista de salida la cual maximiza el grado de entrada del nodo al que
 apunta(target node,  en inglés).
 
\begin_inset space ~
\end_inset

Este problema es resuelto para las tres secuencias metabólicas lineales
 más largas: lysine,  glycolysis y heme.
 
\begin_inset space ~
\end_inset

Todos los nodos que son reacciones son obligatorios.
\begin_inset space ~
\end_inset

El peso de cada nodo es su grado.
\begin_inset space ~
\end_inset

Cada reacción es doblada y su reacción inversa es mutuamente exclusiva (no
 puede aparecer dentro del mismo camino).
\end_layout

\begin_layout Subsubsection
Problema del Recorrido del Caballo
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout
Este es otro problema que es posible resolver usando las restricciones de
 CP(Graph).El problema consiste en a partir de las movidas (saltos) del caballo
 (en L) en un ajedrez,  encontrar un camino que recorra todos los cuadros
 del ajedrez exactamente una vez.Este es un ejemplo del problema del camino
 hamiltoniano sobre un tipo especial de grafo llamado Grafo del Caballo
\begin_inset CommandInset citation
LatexCommand cite
key "key1"

\end_inset

.
\end_layout

\begin_layout Plain Layout
Un modelo de CP(Graph) simple para el recorrido del caballo es: 
\begin_inset Newline newline
\end_inset

Sea KG
\begin_inset Formula $_{8,8}$
\end_inset


\begin_inset space ~
\end_inset

el grafo del caballo para un tablero cuadrado de 8 x 8 cuadros.
\begin_inset space ~
\end_inset

Este grafo se compone de un nodo para cada cuadro del tablero de ajedrez
 y aristas conectando cada pareja de cuadros los cuales pueden ser enlazados
 por una movida del caballo.Sea n
\begin_inset Formula $_{0,0}$
\end_inset

 un cuadro ubicado en la esquina superior izquierda del tablero y n
\begin_inset Formula $_{1,2}$
\end_inset

la ubicación que resulta de una movida del caballo desde n
\begin_inset Formula $_{0,0}$
\end_inset

,  
\begin_inset space ~
\end_inset

el problema es:
\end_layout

\begin_layout Plain Layout
Subgraph(G,  KG
\begin_inset Formula $_{8,8}$
\end_inset

) 
\begin_inset Formula $\wedge$
\end_inset

 Nodes(KG
\begin_inset Formula $_{8,8}$
\end_inset

) = Nodes(G) 
\begin_inset Formula $\wedge$
\end_inset

 Path(G,  n0, 0,  n1, 2) 
\end_layout

\end_inset


\end_layout

\end_body
\end_document
