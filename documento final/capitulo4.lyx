#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass book
\begin_preamble
\setcounter{section}{2}
\usepackage{color}
\usepackage{alltt}
\usepackage{mdwlist}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding auto
\fontencoding global
\font_roman lmodern
\font_sans default
\font_typewriter default
\font_default_family rmdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 0
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Índice
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\topmargin 3cm
\rightmargin 3cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Implementación y Ejecución de los Problemas Seleccionados
\end_layout

\begin_layout Standard
Despues de formalizar los CSP's musicales descritos en el capitulo 3 de
 este trabajo, se procedio a realiza su implementación en las respectivas
 librerias de programación por restricciones seleccionadas.
 
\end_layout

\begin_layout Section
Serie con Todos los Intervalos
\end_layout

\begin_layout Standard
Despues de implementar este CSP en las librerias GECODE, OMClouds y Strasheela,
 se realizaron varias corridas del modelo resultante, variando el único
 parametro de este problema, que es el número de notas que debe contener
 la escala que se solicita.
\end_layout

\begin_layout Subsection
GECODE
\end_layout

\begin_layout Standard
En esta ejecución, se definio un nivel de consistencia ICL_BND, y 5 iteraciones
 para buscar soluciones con 
\begin_inset Formula $n=12$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Soluciones
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Memoria requerida
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tiempo requerido
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Altura del arbol
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nodos del Arbol
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
332
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
52KB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3.200 seg (3200 mseg)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
27
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
102369
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Datos de la Ejecución de GECODE con ICL_BND
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En esta ejecución, se definio un nivel de consistencia ICL_VAL, y 5 iteraciones
 para buscar soluciones con 
\begin_inset Formula $n=12$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Soluciones
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Memoria requerida
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tiempo requerido
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Altura del arbol
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nodos del Arbol
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
332
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
52KB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7.132 seg (7132 mseg)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
30
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
954553
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Datos de la Ejecución de GECODE con ICL_VAL
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En esta ejecución, se definio un nivel de consistencia ICL_DOM, y 5 iteraciones
 para buscar soluciones con 
\begin_inset Formula $n=12$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Soluciones
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Memoria requerida
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tiempo requerido
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Altura del arbol
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nodos del Arbol
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
332
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
151KB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3.276 seg (3276 mseg)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
23
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
19069
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Datos de la Ejecución de GECODE con ICL_DOM
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
OMClouds
\end_layout

\begin_layout Standard
Datos OMClouds
\end_layout

\begin_layout Subsection
Strasheela
\end_layout

\begin_layout Standard
En esta ejecución, se le especifico a strasheela que buscara todas las solucione
s al problema, especificando el uso de una estrategia de propagación FF
 (First Fail).
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Soluciones
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Memoria requerida
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tiempo requerido
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Altura del arbol
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nodos del Arbol
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3856
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
151KB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5.60 seg (5600 mseg)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
40
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
80214
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Datos de la Ejecución de Strasheela con propagación FF
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En esta ejecución, se le especifico a strasheela que buscara todas las solucione
s al problema, especificando el uso de una estrategia de propagación Naive.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Soluciones
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Memoria requerida
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tiempo requerido
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Altura del arbol
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nodos del Arbol
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3856
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
151KB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5.65 seg (5650 mseg)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
40
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
79811
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Datos de la Ejecución de Strasheela con propagación naive
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Serie de Acordes con Notas en Comun
\end_layout

\begin_layout Standard
pruebas
\end_layout

\begin_layout Section
Clasificación de Acordes
\end_layout

\begin_layout Standard
pruebas
\end_layout

\begin_layout Section
Armonizar una Estructura Ritmica
\end_layout

\begin_layout Standard
pruebas
\end_layout

\begin_layout Section
Primer Tipo de Contrapunto Fuxiano
\end_layout

\begin_layout Standard
mas pruebas
\begin_inset Note Note
status collapsed

\begin_layout Chapter
Modificaciones
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\lang english
Este capítulo 4 escribi rapidamente lo que va en cada seccion para retomar
 manana, no es que sea lo ultimo.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
Este capítulo pretende mostrar las modificaciones más importantes realizadas
 a CP(Graph).
\end_layout

\begin_layout Plain Layout
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
cambio orlando, el procedimiento por , el procedimiento y herramientas usadas
\end_layout

\end_inset

El procedimiento y herramientas usadas para la realizar las modificaciones
 fue:
\end_layout

\begin_layout Itemize
Identificar mediante el registro de cambios de Gecode los cambios a nivel
 de implementación 
\begin_inset CommandInset citation
LatexCommand cite
key "key-52"

\end_inset

.
\end_layout

\begin_layout Itemize
El uso del compilador de GNU para rastrear errores de compilación.
\end_layout

\begin_layout Itemize
El uso del GDB para rastrear problemas de segmentación y depuración.
\end_layout

\begin_layout Itemize
El uso intensivo de la documentación de Gecode 1.0 y Gecode 2.1.1.
\end_layout

\begin_layout Section
Propagadores
\end_layout

\begin_layout Subsection
Cambios Generales
\end_layout

\begin_layout Plain Layout
Sobre los Propagadores se realizaron cambios a nivel de implementación que
 involucraban:
\end_layout

\begin_layout Itemize
Incluir nuevos parámetros en los métodos de propagación.
\end_layout

\begin_layout Itemize
Cambiar identificadores de constantes.
\end_layout

\begin_layout Itemize
Incluir restricciones de Channeling para imponer restricciones de variables
 enteras a variables booleanas.
\end_layout

\begin_layout Itemize
Evitar la reimplementación de código,  haciendo que los Propagadores hereden
 de las clases UnaryPropagator y BinaryPropagator.
\end_layout

\begin_layout Subsection
Propagadores con Visitantes
\end_layout

\begin_layout Plain Layout
Durante la propagación existen varios Propagadores que usan Visitantes;
  los Visitantes son clases que a su vez usan un Escáner.
 En el CP(Graph) original la idea es iterar durante todo el escaneo,  sin
 importar si se ha encontrado un fallo;  luego se revisa si se encontró
 un fallo.
 La idea fue implementar un método que permitiera determinar cuando habría
 encontrado un fallo y de esa forma evitar completamente el escaneo posterior,
  pues se conoce de antemano que el Propagador generará un fallo y no hay
 beneficio en ejecutar el escaneo.
\begin_inset Note Note
status open

\begin_layout Plain Layout
Falta decir aquí o en la parte inicial que es un Visitante y que es un Escáneres
 claramente.
 Tengo en mente un gráfico para esa explicación
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Propagadores Agregados
\end_layout

\begin_layout Plain Layout
Se agregaron tres Propagadores encontrados en la versión no oficial 
\begin_inset CommandInset citation
LatexCommand cite
key "key-18"

\end_inset

 de CP(Graph);  para ambos se comprobó su funcionamiento con ambas Vistas.
 La lógica de su funcionamiento es la misma que la expresada teóricamente
 en la tesis de Gregoire Dooms.
\end_layout

\begin_layout Plain Layout
Los propagadores que se agregaron fueron:
\end_layout

\begin_layout Itemize
Symmetric
\begin_inset CommandInset citation
LatexCommand cite
key "introtocpgraph"

\end_inset


\end_layout

\begin_layout Itemize
Undirected
\begin_inset CommandInset citation
LatexCommand cite
key "introtocpgraph"

\end_inset


\end_layout

\begin_layout Itemize
Subgraph
\begin_inset CommandInset citation
LatexCommand cite
key "introtocpgraph"

\end_inset


\end_layout

\begin_layout Section
Asesores
\end_layout

\begin_layout Plain Layout
Se experimentó con la implementación de Asesores para varios de los Propagadores
 disponibles.
 Finalmente se adoptaron dos Asesores para los Propagadores Symmetric, 
 Subgraph y Complement.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Pendiente agregar complement en caso de que complement tambien tenga Asesor
\end_layout

\end_inset

.
\end_layout

\begin_layout Plain Layout
Los Asesores en los Propagadores propuestos por Dooms en CP(Graph) tienen
 gran utilidad y pueden reducir el tiempo de ejecución notablemente.
\begin_inset Newline newline
\end_inset

Normalmente a nivel de implementación durante la propagación,  los Propagadores
 de CP(Graph) tienen que usar un Visitante y un Escáner: 
\end_layout

\begin_layout Itemize
El Escáner es un objeto encargado de explorar las aristas/nodos de un grafo
 y clasificar cada arista/nodo;
\end_layout

\begin_layout Itemize
La clasificación producida por el Escáner es usada por un Visitante para
 almacenar cuales aristas/nodos deben ser quitadas o agregados al Intervalo
 de grafos.
\end_layout

\begin_layout Plain Layout
Por ejemplo, el Propagador de Complement (Impone la restricción g1 es el
 complemento de g2) tiene un Escáner que recibe dos grafos; este Escáner
 tiene que generar cada arista del grafo completo  y clasificarlas para
 el ComplementVisitor,  el ComplementVisitor le informará al Propagador
 qué aristas agregar al LB y cuales quitar del UB; l a figura 4.1 tiene un
 esquema más detallado de lo descrito anteriormente:
\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename graphics/complementScanner.svg
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Escáneres y Visitantes usados por el Propagador de Complemento
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
Durante cada propagación del Propagador de complemento,  se debe iterar
 por cada arista del grafo completo,  sin importar si el cambio sobre uno
 de los dos grafos fue el más mínimo.El Propagador usará el Visitante,  el
 Visitante usará el Escáner y el Escáner realizará una iteración completa
 para entregarle al Visitante la clasificación de las aristas.
\end_layout

\begin_layout Plain Layout
El funcionamiento es similar para todos los Propagadores; la única diferencia
 entre los Propagadores son los Visitantes y Escáneres que usan, es claro
 que existen Escáneres más costosos que otros.
 En Gecode 1.0.0 el funcionamiento de los propagadores debía ser así puesto
 que no había forma de saber cuál variable cambió,  ni cuál fue el cambio
 realizado;  por ello durante cada propagación el Propagador tenía que 
\begin_inset Quotes eld
\end_inset

empezar de cero
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Plain Layout
En Gecode 2.1.1 se tiene el componente Asesor que puede informar qué variable
 cambio y cuál fue el cambio del dominio,  aunque lo anterior tiene una
 limitación: los Asesores solo pueden informar de cambios pequeños sobre
 una variable,  si existieron muchos cambios entonces el Asesor no puede
 dar un informe de los cambios.
\end_layout

\begin_layout Plain Layout
Retomando el ejemplo anterior, al incluir Asesores,  el Asesor podría cambiar
 el estado interno del Propagador informándole que el ultimo cambio fue
 que una arista se agrego al LB del grafo g1; en caso tal,  un escaneo completo
 no es necesario,  bastaría  con que el Propagador haga un tell diciéndole
 al grafo g2 que remueva la arista del UB de g2.
 
\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename graphics/comparacionPropagacion.svg
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Esquema general del cambio en la propagación con Asesores
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Modificaciones Generales Hechas Sobre los Propagadores que Usan Asesores
\end_layout

\begin_layout Plain Layout
Aquí se mencionan las modificaciones que se realizaron sobre todos los Propagado
res que usan Asesores.
\end_layout

\begin_layout Plain Layout
El manejo de Asesores en Gecode es relativamente sencillo.Consiste en implementar
 una función virtual en los Propagadores;  esta función se llama advise.Allí
 se modificará el estado interno del Propagador y se le indicará si debe
 o no propagar.
 Sin embargo hay que hacer unos cambios para adecuar un Propagador de forma
 que trabaje conjuntamente con los Asesores.
 
\end_layout

\begin_layout Itemize
La PC a las que están subscritos es PC_GEN_NONE,  quiere decir que ningún
 Propagador que use Asesores será ejecutado por una condición de propagación.La
 única forma de que la función de propagación sea ejecutada es por que el
 Asesor ha determinado que el Propagador debe ser corrido.
\end_layout

\begin_layout Itemize
\begin_inset Note Note
status open

\begin_layout Plain Layout
Los nombres de estas variables deben cambiar al idioma ingles, cambiar esta
 parte en el futuro
\end_layout

\end_inset

Cada Propagador contiene una variable entera 
\begin_inset Quotes eld
\end_inset

cuenta
\begin_inset Quotes erd
\end_inset

 que se encarga de contar cuantas veces ha sido corrido,  y cuyo objetivo
 es garantizar que la primera vez que el Propagador es corrido se realiza
 una propagación con escaneo.
 Existe otra forma de lograr este mismo efecto,  y es subscribiendo manualmente
 el Propagador al inicio en el CSP planteado.
\end_layout

\begin_layout Itemize
Cada Propagador contiene una variable entera 
\begin_inset Quotes eld
\end_inset

activo
\begin_inset Quotes erd
\end_inset

 cuyo trabajo es ser una bandera.
 Cuando el Propagador con Asesores realiza la propagación se realizan un
 conjunto de Tells,  que generan al mismo tiempo ModEvents sobre las variables
 cuyos dominios están siendo modificados.Cuando estos ModEvents ocurren,
  los Asesores que están suscritos a estas variables,  empezaran a ejecutarse
 y a encolar los respectivos Propagadores a quienes están suscritos.
 La idea con la bandera es indicar cuándo el Asesor llamado pertenece al
 Propagador que actualmente está ejecutandose y de esta forma evitar que
 lo encole nuevamente.
\end_layout

\begin_layout Itemize
Cada Propagador contiene una variable 
\begin_inset Quotes eld
\end_inset

co
\begin_inset Quotes erd
\end_inset

 la cual es un objeto Council y será encargado de mantener los Asesores.
 Esta variable es usada en el constructor del Propagador para subscribir
 las variables a los Asesores.
\end_layout

\begin_layout Itemize
En el constructor del Propagador aquellas variables que dependan del Propagador
 deben subscribirse a un Asesor.
\end_layout

\begin_layout Itemize
Cada Propagador usa la clase 
\begin_inset Note Note
status open

\begin_layout Plain Layout
cambiar nombre de estaclase por una mas apropiada.
\end_layout

\end_inset

 nameAdvisor para saber en el método advise,  cuál variable ha cambiado
 y que es lo que cambio (Una arista o Un nodo),  además para identificar
 si se agregó al LB o se quito del UB.
\end_layout

\begin_layout Itemize
Cada Propagador contiene una variable entera 
\begin_inset Quotes eld
\end_inset

indicador
\begin_inset Quotes erd
\end_inset

 que indica el estado actual del Propagador.
 Esta variable determina la forma de propagar.
\end_layout

\begin_layout Plain Layout

\series bold
NameAdvisor
\series default

\begin_inset Newline newline
\end_inset

 La clase NameAdvisor fue creada,  esta clase extiende de un viewAsesor<SetView>.
 Un objeto de esta clase llega como parámetro al método Advise,  este objeto
 contiene toda la información concerniente a que fue lo que cambio en el
 dominio (Una arista o Un Nodo) y si fue agregado al LB o removido del UB.
\end_layout

\begin_layout Plain Layout
Esta clase extiende de un SetView puesto que internamente las variables
 de grafos están construidas a partir de SetView, lo que significa que a
 bajo nivel,  el quitar o poner una arista/nodo es una modificación a una
 o más variables de conjuntos.
\end_layout

\begin_layout Itemize
El atributo graph_id,  sirve como referencia para los Propagadores que tienen
 varias variables de grafos,  y de esta forma saber en el método advise
 cual grafo fue el que genero el llamado a la función Advise.
\end_layout

\begin_layout Itemize
El atributo nombre sirve como referencia para saber si el cambio se efectuó
 sobre una arista o un nodo.
\end_layout

\begin_layout Itemize
El atributo índice sirve para saber exactamente cual variable cambio dentro
 de un arreglo de variables de conjuntos.
\end_layout

\begin_layout Section
Variables & Views
\end_layout

\begin_layout Plain Layout
En esta sección se explicaran aquellos cambios relevantes hechos sobre las
 Vistas de CP(Graph)
\end_layout

\begin_layout Subsection
Inclusión de Asesores
\end_layout

\begin_layout Plain Layout
La inclusión de Asesores o al menos la posibilidad de tener Asesores genero
 cambios importantes en las dos Vistas disponibles en CP(Graph).
 Debe existir un método capaz de suscribir un Asesor a una variable de grafos.
 Para ello se incluyo un nuevo método en cada Vista,  el método Subscribe
 que recibe un Council, un Propagador y un identificador de grafo (nombre
 para el grafo).
\end_layout

\begin_layout Plain Layout
Este método se encarga de suscribir un Asesor a una Vista de grafos.
 La razón por la que este método se incluye en la Vista es para abstraer
 del Propagador la forma como cada Vista subscribe los Asesores,  de esta
 forma cada Vista tiene una manera diferente de realizar la subscripción,
  siendo para el Propagador indiferente la forma como este proceso se haga.
\end_layout

\begin_layout Plain Layout
Dado que Cada implementación de Variable subscribe a los Asesores de manera
 diferente,  se explicara como se realiza la subscripción para las Vistas
 disponibles en CP(Graph) ya que esto tiene un impacto importante en el
 rendimiento de los Propagadores que usen los Asesores.
 En el capítulo 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sub:Variables-Disponibles-En-CpGraph"

\end_inset

 se explica detalladamente las características de las Vistas disponibles
 en CP(Graph)
\end_layout

\begin_layout Subsubsection*
OutAdjSetsGraphView
\end_layout

\begin_layout Plain Layout
La subscripción de esta Vista se hace subscribiendo las variables internas
 que la conforman:
\end_layout

\begin_layout Itemize

\series bold
NodeSet
\series default
: La variable de conjuntos,  que determina el conjunto de nodos del grafo
 resultante.
\end_layout

\begin_layout Itemize

\series bold
OutN
\series default
: el arreglo de variables de conjuntos,  que determina para cada nodo el
 conjunto de vecinos de salida (out neighbors,  en inglés).
\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename graphics/advisorSubscription_Out.svg
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Suscripción de Asesores en OutAdjSetsGraphView
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
La figura 4.3,  muestra como un Propagador P que usa Asesores suscribe una
 de sus variables que es una Vista OutAdjSetsGraphView a los Asesores.
 Existe un Asesor por cada variable de conjuntos,  quiere decir que cada
 vez que una de estas variables sea modificada el método advise del Propagador
 será llamado y la información sobre el cambio del dominio viajara en un
 objeto tipo Asesor.
\end_layout

\begin_layout Subsubsection*
NodeArcSetsGraphView
\end_layout

\begin_layout Plain Layout
La subscripción de esta Vista se hace subscribiendo las variables internas
 que la conforman:
\end_layout

\begin_layout Itemize

\series bold
NodeSet
\series default
: La variable de conjuntos,  que determina el conjunto de nodos del grafo
 resultante.
\end_layout

\begin_layout Itemize

\series bold
ArcSet
\series default
: La variable de conjuntos,  que determina el conjunto de aristas del grafo
 resultante.
\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename graphics/advisorSubscription_Node.svg
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Suscripción de Asesores en NodeArcSetsGraphView
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
La figura 4.4 muestra como un Propagador P que usa Asesores suscribe una
 de sus variables la cual es una Vista NodeArcSetsGraphView a los Asesores.
 Existe un Asesor por cada variable de conjuntos,  es decir solo dos Asesores.
\end_layout

\end_inset


\end_layout

\end_body
\end_document
